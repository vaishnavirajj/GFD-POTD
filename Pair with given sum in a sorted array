class Solution {
public:
    int countPairs(vector<int>& arr, int target) {
        int n = arr.size();
        int i = 0, j = n - 1;
        int ans = 0;

        while (i < j) {
            int sum = arr[i] + arr[j];
            if (sum == target) {
                // If the elements at i and j are the same
                if (arr[i] == arr[j]) {
                    // Number of ways to select pairs from count of duplicates
                    int count = j - i + 1;
                    ans += (count * (count - 1)) / 2;
                    break;
                } else {
                    // Count duplicates on both sides
                    int countI = 1, countJ = 1;
                    while (i + 1 < j && arr[i] == arr[i + 1]) {
                        countI++;
                        i++;
                    }
                    while (j - 1 > i && arr[j] == arr[j - 1]) {
                        countJ++;
                        j--;
                    }

                    // Add pairs formed by duplicates
                    ans += countI * countJ;

                    // Move pointers
                    i++;
                    j--;
                }
            } else if (sum > target) {
                j--;
            } else {
                i++;
            }
        }

        return ans;
    }
};
